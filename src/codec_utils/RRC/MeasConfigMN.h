/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-InterNodeDefinitions"
 * 	found in "../ASN1_Input/rrc_15_3_asn.asn1"
 * 	`asn1c -D ../RRC_output_14Nov/ -fcompound-names -fno-include-deps -findirect-choice -gen-PER`
 */

#ifndef	_MeasConfigMN_H_
#define	_MeasConfigMN_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <asn_SEQUENCE_OF.h>
#include <constr_SEQUENCE_OF.h>
#include <NULL.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasConfigMN__measGapConfig_PR {
	MeasConfigMN__measGapConfig_PR_NOTHING,	/* No components present */
	MeasConfigMN__measGapConfig_PR_release,
	MeasConfigMN__measGapConfig_PR_setup
} MeasConfigMN__measGapConfig_PR;
typedef enum MeasConfigMN__gapPurpose {
	MeasConfigMN__gapPurpose_perUE	= 0,
	MeasConfigMN__gapPurpose_perFR1	= 1
} e_MeasConfigMN__gapPurpose;

/* Forward declarations */
struct NR_FreqInfo;
struct GapConfig;

/* MeasConfigMN */
typedef struct MeasConfigMN {
	struct MeasConfigMN__measuredFrequenciesMN {
		A_SEQUENCE_OF(struct NR_FreqInfo) list;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *measuredFrequenciesMN;
	struct MeasConfigMN__measGapConfig {
		MeasConfigMN__measGapConfig_PR present;
		union MeasConfigMN__measGapConfig_u {
			NULL_t	 release;
			struct GapConfig	*setup;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *measGapConfig;
	long	*gapPurpose;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} MeasConfigMN_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_gapPurpose_7;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_MeasConfigMN;
extern asn_SEQUENCE_specifics_t asn_SPC_MeasConfigMN_specs_1;
extern asn_TYPE_member_t asn_MBR_MeasConfigMN_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _MeasConfigMN_H_ */
#include <asn_internal.h>
