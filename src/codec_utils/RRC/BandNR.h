/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NR-RRC-Definitions"
 * 	found in "../ASN1_Input/rrc_15_3_asn.asn1"
 * 	`asn1c -D ../RRC_output_14Nov/ -fcompound-names -fno-include-deps -findirect-choice -gen-PER`
 */

#ifndef	_BandNR_H_
#define	_BandNR_H_


#include <asn_application.h>

/* Including external dependencies */
#include "FreqBandIndicatorNR.h"
#include <BIT_STRING.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum BandNR__extendedCP {
	BandNR__extendedCP_supported	= 0
} e_BandNR__extendedCP;
typedef enum BandNR__multipleTCI {
	BandNR__multipleTCI_supported	= 0
} e_BandNR__multipleTCI;
typedef enum BandNR__bwp_WithoutRestriction {
	BandNR__bwp_WithoutRestriction_supported	= 0
} e_BandNR__bwp_WithoutRestriction;
typedef enum BandNR__bwp_SameNumerology {
	BandNR__bwp_SameNumerology_upto2	= 0,
	BandNR__bwp_SameNumerology_upto4	= 1
} e_BandNR__bwp_SameNumerology;
typedef enum BandNR__bwp_DiffNumerology {
	BandNR__bwp_DiffNumerology_upto4	= 0
} e_BandNR__bwp_DiffNumerology;
typedef enum BandNR__crossCarrierScheduling_SameSCS {
	BandNR__crossCarrierScheduling_SameSCS_supported	= 0
} e_BandNR__crossCarrierScheduling_SameSCS;
typedef enum BandNR__pdsch_256QAM_FR2 {
	BandNR__pdsch_256QAM_FR2_supported	= 0
} e_BandNR__pdsch_256QAM_FR2;
typedef enum BandNR__pusch_256QAM {
	BandNR__pusch_256QAM_supported	= 0
} e_BandNR__pusch_256QAM;
typedef enum BandNR__ue_PowerClass {
	BandNR__ue_PowerClass_pc1	= 0,
	BandNR__ue_PowerClass_pc2	= 1,
	BandNR__ue_PowerClass_pc3	= 2,
	BandNR__ue_PowerClass_pc4	= 3
} e_BandNR__ue_PowerClass;
typedef enum BandNR__rateMatchingLTE_CRS {
	BandNR__rateMatchingLTE_CRS_supported	= 0
} e_BandNR__rateMatchingLTE_CRS;
typedef enum BandNR__channelBWs_DL_v1530_PR {
	BandNR__channelBWs_DL_v1530_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_DL_v1530_PR_fr1,
	BandNR__channelBWs_DL_v1530_PR_fr2
} BandNR__channelBWs_DL_v1530_PR;
typedef enum BandNR__channelBWs_UL_v1530_PR {
	BandNR__channelBWs_UL_v1530_PR_NOTHING,	/* No components present */
	BandNR__channelBWs_UL_v1530_PR_fr1,
	BandNR__channelBWs_UL_v1530_PR_fr2
} BandNR__channelBWs_UL_v1530_PR;
typedef enum BandNR__ext1__maxUplinkDutyCycle_PC2_FR1 {
	BandNR__ext1__maxUplinkDutyCycle_PC2_FR1_n60	= 0,
	BandNR__ext1__maxUplinkDutyCycle_PC2_FR1_n70	= 1,
	BandNR__ext1__maxUplinkDutyCycle_PC2_FR1_n80	= 2,
	BandNR__ext1__maxUplinkDutyCycle_PC2_FR1_n90	= 3,
	BandNR__ext1__maxUplinkDutyCycle_PC2_FR1_n100	= 4
} e_BandNR__ext1__maxUplinkDutyCycle_PC2_FR1;

/* Forward declarations */
struct MIMO_ParametersPerBand;

/* BandNR */
typedef struct BandNR {
	FreqBandIndicatorNR_t	 bandNR;
	BIT_STRING_t	*modifiedMPR_Behaviour;	/* OPTIONAL */
	struct MIMO_ParametersPerBand	*mimo_ParametersPerBand;	/* OPTIONAL */
	long	*extendedCP;	/* OPTIONAL */
	long	*multipleTCI;	/* OPTIONAL */
	long	*bwp_WithoutRestriction;	/* OPTIONAL */
	long	*bwp_SameNumerology;	/* OPTIONAL */
	long	*bwp_DiffNumerology;	/* OPTIONAL */
	long	*crossCarrierScheduling_SameSCS;	/* OPTIONAL */
	long	*pdsch_256QAM_FR2;	/* OPTIONAL */
	long	*pusch_256QAM;	/* OPTIONAL */
	long	*ue_PowerClass;	/* OPTIONAL */
	long	*rateMatchingLTE_CRS;	/* OPTIONAL */
	struct BandNR__channelBWs_DL_v1530 {
		BandNR__channelBWs_DL_v1530_PR present;
		union BandNR__channelBWs_DL_v1530_u {
			struct BandNR__channelBWs_DL_v1530__fr1 {
				BIT_STRING_t	*scs_15kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_30kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_60kHz;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *fr1;
			struct BandNR__channelBWs_DL_v1530__fr2 {
				BIT_STRING_t	*scs_60kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_120kHz;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_DL_v1530;
	struct BandNR__channelBWs_UL_v1530 {
		BandNR__channelBWs_UL_v1530_PR present;
		union BandNR__channelBWs_UL_v1530_u {
			struct BandNR__channelBWs_UL_v1530__fr1 {
				BIT_STRING_t	*scs_15kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_30kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_60kHz;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *fr1;
			struct BandNR__channelBWs_UL_v1530__fr2 {
				BIT_STRING_t	*scs_60kHz;	/* OPTIONAL */
				BIT_STRING_t	*scs_120kHz;	/* OPTIONAL */
				
				/* Context for parsing across buffer boundaries */
				asn_struct_ctx_t _asn_ctx;
			} *fr2;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *channelBWs_UL_v1530;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct BandNR__ext1 {
		long	*maxUplinkDutyCycle_PC2_FR1;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} BandNR_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_extendedCP_5;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_multipleTCI_7;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_WithoutRestriction_9;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_SameNumerology_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bwp_DiffNumerology_14;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_crossCarrierScheduling_SameSCS_16;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pdsch_256QAM_FR2_18;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_pusch_256QAM_20;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_ue_PowerClass_22;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_rateMatchingLTE_CRS_27;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_maxUplinkDutyCycle_PC2_FR1_47;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_BandNR;
extern asn_SEQUENCE_specifics_t asn_SPC_BandNR_specs_1;
extern asn_TYPE_member_t asn_MBR_BandNR_1[16];

#ifdef __cplusplus
}
#endif

#endif	/* _BandNR_H_ */
#include <asn_internal.h>
