{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c0546f06_b984737d",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 4
      },
      "lineNbr": 3448,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "why we are sending max num of UE here.",
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e4a82ca_220064e7",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 4
      },
      "lineNbr": 3448,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "May be we can send invalid Uint8 value to avoid confusion",
      "range": {
        "startLine": 3448,
        "startChar": 52,
        "endLine": 3448,
        "endChar": 62
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1957e809_fb377fe7",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 4
      },
      "lineNbr": 3504,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "why we are sending max num of UE? \nlike we have done for RAR , are you going to same here as well?",
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38a272d_a5e0393c",
        "filename": "src/5gnrsch/sch.c",
        "patchSetId": 4
      },
      "lineNbr": 1404,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:14:01Z",
      "side": 1,
      "message": "As per my understanding we are passing here UEID not UEIDX, so this should be renamed as ueId, other wise this will create confusion",
      "range": {
        "startLine": 1404,
        "startChar": 13,
        "endLine": 1404,
        "endChar": 18
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1125bf5a_3caf5d46",
        "filename": "src/5gnrsch/sch.c",
        "patchSetId": 4
      },
      "lineNbr": 1404,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "Dont we need to release this allocation at appropriate point\n1. deleteSchCellCb\n2. Or may be a scenario where UE is getting removed from database from upper layer? (MacSchUeDeleteReq)",
      "range": {
        "startLine": 1404,
        "startChar": 3,
        "endLine": 1404,
        "endChar": 12
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2a2b926_2ef0d82b",
        "filename": "src/5gnrsch/sch.h",
        "patchSetId": 4
      },
      "lineNbr": 166,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "Add the comment for this variable",
      "range": {
        "startLine": 166,
        "startChar": 16,
        "endLine": 166,
        "endChar": 23
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be669ad_44fc0e1a",
        "filename": "src/5gnrsch/sch.h",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 167,
        "startChar": 16,
        "endLine": 167,
        "endChar": 23
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4621fc07_3c0ae8c4",
        "filename": "src/5gnrsch/sch.h",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "Just a doubt, a UE can be scheduled for many things at a time .. If we just talk abt UL and DL.. Same UE may be scheduled for UL but not for DL. If this is the case how this LL can differentiate between these two UEs?\n\nIs maintaining UE to be scheduled list for every msg common (i.e. in Cell\u0027s context) will work? Am I missing anything?",
      "range": {
        "startLine": 314,
        "startChar": 17,
        "endLine": 314,
        "endChar": 32
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494627c3_ab22d51e",
        "filename": "src/5gnrsch/sch.h",
        "patchSetId": 4
      },
      "lineNbr": 350,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:14:01Z",
      "side": 1,
      "message": "change this to ue Id",
      "range": {
        "startLine": 350,
        "startChar": 52,
        "endLine": 350,
        "endChar": 57
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67e3e67f_4de756b8",
        "filename": "src/5gnrsch/sch.h",
        "patchSetId": 4
      },
      "lineNbr": 361,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "change this to UEID as well",
      "range": {
        "startLine": 361,
        "startChar": 73,
        "endLine": 361,
        "endChar": 78
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a55db2b1_db77aaf3",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 367,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "DO you think are we required this parameter.",
      "range": {
        "startLine": 367,
        "startChar": 3,
        "endLine": 367,
        "endChar": 15
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2942c7c5_16467e28",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 384,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "1. Can there be a case where same UE has been scheduled for this slot. In that case, dont we need to return Rar scheduled as TRUE?? I mean dont we need to remove that UE from the Linklist\n\n2. I guess in real -time scenario, gNB can receive multiple Rach_req for same UE. In that case, the latest req will be entertained or any previous req will be processed? In any case, one of rach req can be discarded.",
      "range": {
        "startLine": 384,
        "startChar": 39,
        "endLine": 384,
        "endChar": 46
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d120200f_1f4854c6",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 405,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 405,
        "startChar": 45,
        "endLine": 405,
        "endChar": 53
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7161f8fd_a3760f37",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 424,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 424,
        "startChar": 57,
        "endLine": 424,
        "endChar": 65
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a3cbf6_e990d590",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 456,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "I think the information which we are filling in schFillRar and schDlRsrcAllocMsg4 are same. can we remove one of them",
      "range": {
        "startLine": 456,
        "startChar": 10,
        "endLine": 456,
        "endChar": 20
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "215d8d1b_9b7345f5",
        "filename": "src/5gnrsch/sch_rach.c",
        "patchSetId": 4
      },
      "lineNbr": 588,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "Dont we need to check if we have this UE id in the list already?",
      "range": {
        "startLine": 588,
        "startChar": 3,
        "endLine": 588,
        "endChar": 21
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b315e9a_ac4d46a3",
        "filename": "src/5gnrsch/sch_slot_ind.c",
        "patchSetId": 4
      },
      "lineNbr": 491,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "Although the logic you have written will work but as per Function \"cmLListDelFrm\" definition says that node which is getting deleted is returned one.\n\nSo get the return of cmLListDelFrm and put it into below code.\nor you can merge it like this:\n\ncmLListAdd2Tail(\u0026cell-\u003eueToBeScheduled, cmLListDelFrm(\u0026cell-\u003eueToBeScheduled, pendingUeNode));",
      "range": {
        "startLine": 491,
        "startChar": 12,
        "endLine": 491,
        "endChar": 25
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767d75b4_6c905e99",
        "filename": "src/5gnrsch/sch_ue_mgr.c",
        "patchSetId": 4
      },
      "lineNbr": 1099,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "we should dealloc new UE scheduled list also",
      "range": {
        "startLine": 1099,
        "startChar": 5,
        "endLine": 1099,
        "endChar": 20
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34df24d2_d1fa3d07",
        "filename": "src/5gnrsch/sch_ue_mgr.c",
        "patchSetId": 4
      },
      "lineNbr": 1103,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "pls Initialize these variables",
      "range": {
        "startLine": 1103,
        "startChar": 12,
        "endLine": 1103,
        "endChar": 16
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18fbc88_17bf9b49",
        "filename": "src/5gnrsch/sch_ue_mgr.c",
        "patchSetId": 4
      },
      "lineNbr": 1110,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "lets test these part once again using memory tool.",
      "range": {
        "startLine": 1110,
        "startChar": 22,
        "endLine": 1110,
        "endChar": 27
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0d44e7_cc2cb6c7",
        "filename": "src/cm/mac_sch_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 950,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "remove these.",
      "range": {
        "startLine": 950,
        "startChar": 25,
        "endLine": 950,
        "endChar": 26
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90dd78fd_f487d684",
        "filename": "src/du_app/du_mgr_main.c",
        "patchSetId": 4
      },
      "lineNbr": 398,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "revert these before submission",
      "range": {
        "startLine": 398,
        "startChar": 30,
        "endLine": 398,
        "endChar": 41
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3bd144a_9202f944",
        "filename": "src/phy_stub/phy_stub_msg_hdl.c",
        "patchSetId": 4
      },
      "lineNbr": 1046,
      "author": {
        "id": 1000472
      },
      "writtenOn": "2021-10-29T17:04:44Z",
      "side": 1,
      "message": "Rather than writing code for 3 time , we can add these in a loop.\nfor sfn and slot we can store them into an array and we can access then sequentially.",
      "range": {
        "startLine": 1046,
        "startChar": 26,
        "endLine": 1046,
        "endChar": 37
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "061a7865_67ca8ef9",
        "filename": "src/phy_stub/phy_stub_msg_hdl.c",
        "patchSetId": 4
      },
      "lineNbr": 1062,
      "author": {
        "id": 1001425
      },
      "writtenOn": "2021-10-30T04:36:06Z",
      "side": 1,
      "message": "what is the logic for taking these sfn and slot.. If you can explain as comment",
      "range": {
        "startLine": 1062,
        "startChar": 67,
        "endLine": 1062,
        "endChar": 71
      },
      "revId": "f42afe1b6eccf0aeb5c6c32bd4b92510c1c4fa97",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}