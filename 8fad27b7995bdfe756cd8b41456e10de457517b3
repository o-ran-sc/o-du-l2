{
  "comments": [
    {
      "key": {
        "uuid": "9b8333fb_e22fecbf",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2592,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "only those functions which access FAPI files must be in this flag. Also, if the function prototype as such doesnt take FAPI files, this flag must be there inside the function",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e612de8a_eb64f2e7",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2592,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "agreed to move a flag inside the function",
      "parentUuid": "9b8333fb_e22fecbf",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3438d37_0f3864c0",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2610,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "why do we need this variable? Can we not just set the presence flag???",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd7a9fc_bb453745",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2610,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "to be discussed",
      "parentUuid": "e3438d37_0f3864c0",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b772f16_556734eb",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2666,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "this loop runs multiple times and at the last index all values get overwritten??",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea2fd0ab_489dfb98",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2666,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "No. After copying the value of UnrestrictedSetNcsTable[0] to *numCs. Break statement executes.\nSo only for idx\u003d0, for loop executes.",
      "parentUuid": "4b772f16_556734eb",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc8689c1_4f729b88",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2739,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "use memset()",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63271814_1567ab86",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2739,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "agreed",
      "parentUuid": "fc8689c1_4f729b88",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "042ef528_9eee1ece",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2752,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "sizeof(fapi_ul_tti_req_t) must be used",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aaa4310_3bee9fe8",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2752,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "agreed",
      "parentUuid": "042ef528_9eee1ece",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0b772a7_6e62eadf",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2773,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "this will not work. We can discuss.",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31c3b164_44acd961",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2780,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "what about WLS_FREE??",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bac79dcc_886a138c",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2780,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "Agreed. added a Flag of WLS_MEM_FREE",
      "parentUuid": "31c3b164_44acd961",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a6e2b73_4d1434de",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2789,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "what if WLS memory was sued for allocation?",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1d6c31c_0e33db38",
        "filename": "src/5gnrmac/lwr_mac_fsm.c",
        "patchSetId": 2
      },
      "lineNbr": 2789,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "Agreed. Added a flag for WLS_MEM_FREE",
      "parentUuid": "6a6e2b73_4d1434de",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64eec851_e424f873",
        "filename": "src/phy_stub/l1_bdy1.c",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1000285
      },
      "writtenOn": "2020-04-26T05:39:55Z",
      "side": 1,
      "message": "this si wrong. ulTtiReq was assigned from MAC region and memory. But we are freeing from DU aPP region(0,0)",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38b473e9_c91a5a79",
        "filename": "src/phy_stub/l1_bdy1.c",
        "patchSetId": 2
      },
      "lineNbr": 430,
      "author": {
        "id": 1000305
      },
      "writtenOn": "2020-04-26T07:36:03Z",
      "side": 1,
      "message": "ok. Freeing it using MAC_FREE now",
      "parentUuid": "64eec851_e424f873",
      "revId": "8fad27b7995bdfe756cd8b41456e10de457517b3",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    }
  ]
}